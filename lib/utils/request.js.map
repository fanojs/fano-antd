{"version":3,"sources":["../../src/utils/request.js"],"names":["TOKEN_KEY","request","url","opts","_","merge","method","headers","cache","credentials","token","window","localStorage","getItem","onError","result","errorHandler","errmsg","isFunction","error","res","data","status","json","errcode","errstack","console","get","post","body","JSON","stringify","put","del"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-fetch'\nimport { message } from 'antd'\nimport _ from 'lodash'\n\nconst TOKEN_KEY = 'token'\n\n/**\n * 底层请求封装\n * @param url\n * @param body\n * @param [opts]\n * @return {Promise}\n */\nasync function request (url, opts) {\n  // 配置加工\n  opts = _.merge({\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    cache: 'no-cache',\n    credentials: 'include'\n  }, opts)\n  const token = window.localStorage.getItem(TOKEN_KEY)\n  if (token && !opts.headers.token) {\n    opts.headers.token = token\n  }\n  const onError = _.result(opts, 'onError', null)\n  delete opts.onError\n\n  // 定义异常处理器\n  const errorHandler = async (errmsg) => {\n    if (onError !== null) {\n      if (_.isFunction(onError)) {\n        onError(errmsg)\n      }\n    } else {\n      errmsg = errmsg || 'Network error'\n      message.error(errmsg)\n    }\n  }\n\n  // 执行请求\n  const res = await fetch(url, opts)\n  let data = null\n  if (res.status >= 200 && res.status < 300) {\n    const json = await res.json()\n    if (json.errcode || json.errmsg) {\n      if (json.errstack) {\n        console.error(json.errstack)\n      }\n      await errorHandler(json.errmsg)\n    } else {\n      data = _.result(json, 'data', json)\n    }\n  } else {\n    await errorHandler()\n  }\n  return data\n}\n\n/**\n * 常规GET请求\n * @param url\n * @param [opts]\n * @return {Promise}\n */\nexport function get (url, opts) {\n  return request(url, opts)\n}\n\n/**\n * 常规POST请求\n * @param url\n * @param body\n * @param [opts]\n * @return {Promise}\n */\nexport function post (url, body, opts) {\n  return request(url, _.merge({\n    method: 'POST',\n    body: JSON.stringify(body)\n  }, opts))\n}\n\n/**\n * 常规PUT请求\n * @param url\n * @param body\n * @param [opts]\n * @return {Promise}\n */\nexport function put (url, body, opts) {\n  return request(url, _.merge({\n    method: 'PUT',\n    body: JSON.stringify(body)\n  }, opts))\n}\n\n/**\n * 常规DELETE请求\n * @param url\n * @param body\n * @param [opts]\n * @return {Promise}\n */\nexport function del (url, body, opts) {\n  return request(url, _.merge({\n    method: 'DELETE',\n    body: JSON.stringify(body)\n  }, opts))\n}\n\nexport default request\n"],"file":"request.js"}