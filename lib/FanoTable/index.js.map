{"version":3,"sources":["../../src/FanoTable/index.jsx"],"names":["_","isFunction","window","L","key","value","FanoTable","c","config","options","isPlainObject","merge","Error","fromJson","json","props","combineExpandProps","columnExpand","columns","column","expand","dataIndex","Object","keys","length","push","cloneDeep","React","Component","fromUrl","url","isString","then","Array","isArray","get","list","catch","e","fromMeta","code","metaUrl","qs","stringify"],"mappings":"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","sourcesContent":["import React from 'react'\nimport qs from 'qs'\nimport _ from 'lodash'\nimport { get } from '../utils/request'\nimport DynamicTable from './DynamicTable'\n\nif (!_.isFunction(window.L)) {\n  window.L = (key, value) => {\n    return value || key\n  }\n}\n\n/**\n * 表格组件\n */\nclass FanoTable { }\n\nFanoTable.c = {}\n\n/**\n * 全局配置\n * @param {*} options 配置项\n */\nFanoTable.config = (options) => {\n  if (_.isPlainObject(options)) {\n    _.merge(FanoTable.c, options)\n  } else {\n    throw new Error(`Invalid options`)\n  }\n}\n\n/**\n * 使用JSON配置生成表格\n * @param {*} json JSON配置\n */\nFanoTable.fromJson = (json) => {\n  return (\n    class FanoComponent extends React.Component {\n      constructor (props) {\n        super(props)\n        this.combineExpandProps(json)\n      }\n\n      combineExpandProps (json) {\n        const { columnExpand } = this.props\n        if (!_.isPlainObject(columnExpand)) {\n          return\n        }\n\n        for (const column of json.columns) {\n          const expand = columnExpand[column.dataIndex]\n          if (_.isPlainObject(expand)) {\n            _.merge(column, expand)\n          }\n          delete columnExpand[column.dataIndex]\n        }\n        if (Object.keys(columnExpand).length > 0) {\n          for (const dataIndex in columnExpand) {\n            const value = columnExpand[dataIndex]\n            value.dataIndex = dataIndex\n            json.columns.push(_.cloneDeep(value))\n          }\n        }\n      }\n\n      render () {\n        return (\n          <DynamicTable {...this.props}\n            c={FanoTable.c}\n            config={json}\n          />\n        )\n      }\n    }\n  )\n}\n\n/**\n * 通过URL获取配置后再生成表格\n * @param {*} url 配置URL\n */\nFanoTable.fromUrl = (url) => {\n  if (!_.isString(url)) {\n    throw new Error(`Invalid 'url': ${url}`)\n  }\n  get(url)\n    .then(json => {\n      if (Array.isArray(_.get(json, 'list'))) {\n        FanoTable.fromJson(json.list)\n      } else {\n        throw new Error(`Invalid 'url' format`)\n      }\n    })\n    .catch(e => { throw e })\n}\n\n/**\n * 通过元数据编码获取配置后再生成表格\n * @param {*} code 元数据编码\n */\nFanoTable.fromMeta = (code) => {\n  if (!_.isString(code)) {\n    throw new Error(`Invalid code: ${code}`)\n  } else if (!_.isString(FanoTable.c.metaUrl)) {\n    throw new Error(`Invalid 'metaUrl' format`)\n  }\n  get(`${FanoTable.c.metaUrl}?${qs.stringify({ code })}`)\n    .then(json => {\n      if (Array.isArray(_.get(json, 'list'))) {\n        FanoTable.fromJson(json.list)\n      } else {\n        throw new Error(`Invalid 'metaUrl' format`)\n      }\n    })\n    .catch(e => { throw e })\n}\n\nexport default FanoTable\n"],"file":"index.js"}