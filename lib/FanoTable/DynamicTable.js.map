{"version":3,"sources":["../../src/FanoTable/DynamicTable.jsx"],"names":["DynamicTable","props","cacheKey","config","name","toUpperCase","cachedSetting","loadSettingFromLocal","data","list","Array","isArray","values","showActions","_","get","split","handleResize","index","e","size","setState","columns","nextColumns","Object","assign","width","handleDel","bind","handleAdd","handleEdit","handleSync","handleSetting","handleSelect","handleRowClick","handleTableChange","handleColumnsSetting","setting","merge","fixedHeader","rowSelected","checkbox","pageMode","loading","nativeSetting","expandSetting","version","clearLocalSetting","wrapColumnsDefaultProps","state","actionsSize","transformActionsSize","columnsSetting","selectedRowKeys","selectedRows","settingModalVisible","key","JSON","parse","window","localStorage","getItem","omit","isPlainObject","stringify","setItem","removeItem","fetchList","rowNoColumn","title","dataIndex","rawColumns","rowNo","find","item","unshift","getRowNoColumn","column","undefined","render","isFunction","text","record","tip","includes","img","push","presetActions","cursor","color","actionsColumn","fixed","actions","cloneDeep","rowActions","ret","i","length","action","filter","url","s","lastIndexOf","query","qs","substr","substring","range","page","sort","value","parseInt","join","isString","project","cond","onResize","restProps","listUrl","wrapQueryString","json","console","warn","onAdd","onEdit","rowKey","warning","success","onDel","deleteUrl","onSetting","saveSettingToLocal","settingSize","set","pagination","filters","sorter","current","pageSize","order","field","$in","likeMode","callback","$regex","$options","preData","tableActions","clone","display","keyword","filterIcon","tips","inputPart","handleCond","target","filterDropdown","styles","customFilterDropdown","dataSource","scroll","x","y","total","totalrecords","rowSelection","onChange","type","rowSelectedType","onRow","onClick","resizeableHeader","components","header","cell","resizeableTitle","map","col","onHeaderCell","customTableActions","container","toolbar","marginBottom","rightArea","hideOnNoSelected","fontWeight","margin","marginLeft","bordered","checked","showHeader","fieldsSetting","fieldSetting","fieldSettingLabel","React","Component"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react'\nimport _ from 'lodash'\nimport qs from 'qs'\nimport { Table, Button, Popconfirm, Divider, Icon, Checkbox, Modal, Radio, Row, Col, Tooltip, Alert, Input, message } from 'antd'\nimport { Resizable } from 'react-resizable'\nimport { get, del } from '../utils/request'\nimport { If } from '../components/Directives'\nimport styles from './DynamicTable.less'\n\nexport default class DynamicTable extends React.Component {\n  constructor (props) {\n    super(props)\n    const cacheKey = `FanoTable_${props.config.name}_setting`.toUpperCase()\n    const cachedSetting = this.loadSettingFromLocal(cacheKey)\n    const data = {\n      list: Array.isArray(props.values) ? props.values : []\n    }\n    const showActions = _.get(this, 'props.config.showActions', 'del,sync,new,delRow,editRow').split(',')\n    this.handleResize = (index) => {\n      return (e, { size }) => {\n        this.setState(({ columns }) => {\n          const nextColumns = [...columns]\n          nextColumns[index] = Object.assign({}, nextColumns[index], {\n            width: size.width\n          })\n          return { columns: nextColumns }\n        })\n      }\n    }\n    this.handleDel = this.handleDel.bind(this)\n    this.handleAdd = this.handleAdd.bind(this)\n    this.handleEdit = this.handleEdit.bind(this)\n    this.handleSync = this.handleSync.bind(this)\n    this.handleSetting = this.handleSetting.bind(this)\n    this.handleSelect = this.handleSelect.bind(this)\n    this.handleRowClick = this.handleRowClick.bind(this)\n    this.handleTableChange = this.handleTableChange.bind(this)\n    this.handleColumnsSetting = this.handleColumnsSetting.bind(this)\n    const setting = _.merge({\n      size: 'middle',\n      fixedHeader: true,\n      rowSelected: true,\n      checkbox: true,\n      pageMode: true,\n      loading: false\n    }, props.config.setting, props.nativeSetting, props.expandSetting)\n    if (!setting.version || (setting.version && setting.version === _.get(cachedSetting, 'setting.version'))) {\n      _.merge(setting, cachedSetting.setting)\n    } else {\n      this.clearLocalSetting(cacheKey)\n    }\n    const columns = this.wrapColumnsDefaultProps(props.config.columns, showActions, setting)\n    this.state = {\n      cacheKey,\n      actionsSize: this.transformActionsSize(),\n      setting,\n      data,\n      columns,\n      columnsSetting: cachedSetting.columnsSetting,\n      showActions,\n      selectedRowKeys: [],\n      selectedRows: [],\n      settingModalVisible: false\n    }\n  }\n\n  loadSettingFromLocal (key) {\n    const setting = JSON.parse(window.localStorage.getItem(key) || '{}')\n    return {\n      setting: _.omit(setting, 'columnsSetting'),\n      columnsSetting: setting.columnsSetting || {}\n    }\n  }\n\n  saveSettingToLocal (key, setting) {\n    if (_.isPlainObject(setting)) {\n      setting = JSON.stringify(setting)\n    }\n    window.localStorage.setItem(key, setting)\n  }\n\n  clearLocalSetting (key) {\n    window.localStorage.removeItem(key)\n  }\n\n  componentWillMount () {\n    this.fetchList()\n  }\n\n  getRowNoColumn () {\n    return this.rowNoColumn || {\n      title: 'No.',\n      dataIndex: 'rowNo',\n      width: 60\n    }\n  }\n\n  wrapColumnsDefaultProps (rawColumns, showActions, setting) {\n    let columns = []\n    if (setting.rowNo && !rawColumns.find(item => item.dataIndex === 'rowNo')) {\n      rawColumns.unshift(this.getRowNoColumn())\n    }\n    for (const column of rawColumns) {\n      if (column.width === undefined) {\n        column.width = setting.width || 150\n      }\n      const render = column.render\n      if (_.isFunction(render)) {\n        column.render = (text, record) => {\n          text = render(text, record)\n          if (column.tip) {\n            text = <Tooltip title={text}>{text}</Tooltip>\n          }\n          return text\n        }\n      } else if (!['actions'].includes(column.dataIndex)) {\n        column.render = (text) => {\n          if (column.img) {\n            text = <img src={text} alt={text} height={30} />\n          } else {\n            text = <span>{text}</span>\n          }\n          if (column.tip) {\n            text = <Tooltip title={text}>{text}</Tooltip>\n          }\n          return text\n        }\n      }\n      columns.push(column)\n    }\n    const presetActions = []\n    if (showActions.includes('editRow')) {\n      presetActions.push((text, record) => {\n        return (\n          <Icon\n            key={'edit'}\n            type={'edit'}\n            style={{ cursor: 'pointer' }}\n            onClick={() => {\n              this.handleEdit(record)\n            }}\n          />\n        )\n      })\n    }\n    if (showActions.includes('delRow')) {\n      presetActions.push((text, record) => {\n        return (\n          <Popconfirm\n            title={'确认删除吗？'}\n            onConfirm={() => {\n              this.handleDel(record)\n            }}\n            key={'del'}\n            okText={'确定'}\n            cancelText={'取消'}\n          >\n            <Icon key={'delete'} type={'delete'} style={{ cursor: 'pointer', color: '#f5222d' }} />\n          </Popconfirm>\n        )\n      })\n    }\n    // 添加操作列\n    const actionsColumn = {\n      title: '操作',\n      dataIndex: 'actions',\n      fixed: 'right',\n      width: 80,\n      render: (text, record) => {\n        const actions = _.cloneDeep(presetActions)\n        const { actionsSize } = this.state\n        if (Array.isArray(this.props.rowActions)) {\n          for (const item of this.props.rowActions) {\n            if (_.isFunction(item)) {\n              actions.push(item(record, actionsSize))\n            }\n          }\n        }\n        const ret = []\n        for (let i = 0; i < actions.length; i++) {\n          let action = actions[i]\n          if (_.isFunction(action)) {\n            action = action(text, record)\n          }\n          ret.push(action)\n          if (i < actions.length - 1) {\n            ret.push(<Divider type={'vertical'} key={i} />)\n          }\n        }\n        return ret\n      }\n    }\n    columns = columns.filter(column => {\n      if (column.dataIndex === 'actions') {\n        _.merge(actionsColumn, column)\n        if (actionsColumn.width === '-' || !actionsColumn.width) {\n          delete actionsColumn.width\n        }\n        return false\n      }\n      if (column.width === '-' || !column.width) {\n        delete column.width\n      }\n      return true\n    })\n    columns.push(actionsColumn)\n    this.rowNoColumn = _.find(columns, item => item.dataIndex === 'rowNo')\n    return columns\n  }\n\n  wrapQueryString (url) {\n    const { data } = this.state\n    const s = url.lastIndexOf('?')\n    const query = {}\n    if (s > 0) {\n      Object.assign(query, qs.parse(url.substr(s + 1)))\n      url = url.substring(0, s)\n    }\n    if (data.range) {\n      query.range = data.range\n    }\n    if (data.page) {\n      query.page = data.page\n    }\n    if (data.size) {\n      query.size = data.size\n    }\n    if (data.sort) {\n      if (_.isPlainObject(data.sort)) {\n        const sort = []\n        for (const key in data.sort) {\n          const value = data.sort[key]\n          if (parseInt(value) === -1) {\n            sort.push(`-${key}`)\n          } else {\n            sort.push(key)\n          }\n        }\n        query.sort = sort.join(',')\n      } else if (_.isString(data.sort)) {\n        query.sort = data.sort\n      }\n    }\n    if (data.project) {\n      if (_.isPlainObject(data.project)) {\n        const project = []\n        for (const key in data.project) {\n          const value = data.project[key]\n          if (parseInt(value) === 0) {\n            project.push(`-${key}`)\n          } else {\n            project.push(key)\n          }\n        }\n        query.project = project.join(',')\n      } else if (_.isString(data.project)) {\n        query.project = data.project\n      }\n    }\n    if (data.cond) {\n      if (_.isPlainObject(data.cond)) {\n        query.cond = JSON.stringify(data.cond)\n      } else if (_.isString(data.cond)) {\n        query.cond = data.cond\n      }\n    }\n    return `${url}?${qs.stringify(query)}`\n  }\n\n  resizeableTitle (props) {\n    const { onResize, width } = props\n    const restProps = _.omit(props, 'onResize', 'width')\n    if (!width) {\n      return <th {...restProps} />\n    }\n    return (\n      <Resizable width={width} height={0} onResize={onResize}>\n        <th {...restProps} />\n      </Resizable>\n    )\n  }\n\n  async fetchList () {\n    let { setting } = this.state\n    setting.loading = true\n    this.setState({ setting })\n    const { listUrl } = this.props.config\n    const url = this.wrapQueryString(listUrl)\n    const json = await get(url)\n    setting = this.state.setting\n    setting.loading = false\n    if (Array.isArray(_.get(json, 'list'))) {\n      for (let i = 0; i < json.list.length; i++) {\n        const item = json.list[i]\n        item.rowNo = (json.page - 1) * json.size + i + 1\n      }\n      this.setState({\n        data: json,\n        setting\n      })\n    } else {\n      console.warn(`Invalid 'url' format`)\n      this.setState({\n        setting\n      })\n    }\n  }\n\n  handleSync () {\n    this.fetchList()\n  }\n\n  handleAdd () {\n    if (_.isFunction(this.props.onAdd)) {\n      this.props.onAdd()\n    }\n  }\n\n  handleEdit () {\n    if (_.isFunction(this.props.onEdit)) {\n      this.props.onEdit()\n    }\n  }\n\n  async handleDel (record) {\n    const { rowKey } = this.state.setting\n    let { selectedRowKeys, selectedRows } = this.state\n    if (record) {\n      selectedRowKeys = [record[rowKey]]\n      selectedRows = [record]\n    }\n    if (selectedRowKeys.length === 0) {\n      message.warning('请先选择需要删除的数据')\n    }\n    let success = false\n    if (_.isFunction(this.props.onDel)) {\n      this.props.onDel(selectedRowKeys, selectedRows)\n      success = true\n    } else {\n      const { deleteUrl } = this.props.config\n      if (deleteUrl) {\n        const ret = await del(deleteUrl, {\n          cond: {\n            [rowKey]: selectedRowKeys\n          }\n        })\n        if (ret) {\n          message.success(`已成功删除 ${selectedRowKeys.length} 条记录`, 5)\n          success = true\n        }\n      }\n    }\n    if (success) {\n      this.setState({\n        selectedRowKeys: [],\n        selectedRows: []\n      }, this.fetchList)\n    }\n  }\n\n  handleSetting (key, value) {\n    let { setting, columns } = this.state\n    setting[key] = value\n    if (_.isFunction(this.props.onSetting)) {\n      this.props.onSetting(setting)\n    }\n    const state = { setting }\n    if (key === 'size') {\n      state.actionsSize = this.transformActionsSize(value)\n    } else if (key === 'rowNo') {\n      if (value) {\n        columns.unshift(this.getRowNoColumn())\n      } else {\n        columns = columns.filter(item => item.dataIndex !== 'rowNo')\n      }\n      state.columns = columns\n    }\n    this.setState(state, () => {\n      this.saveSettingToLocal(this.state.cacheKey, Object.assign({ columnsSetting: this.state.columnsSetting }, this.state.setting))\n    })\n  }\n\n  transformActionsSize (settingSize) {\n    return {\n      'default': 'large',\n      'middle': 'default',\n      'small': 'small'\n    }[settingSize] || 'default'\n  }\n\n  handleRowClick (record, e) {\n    let { selectedRowKeys, selectedRows } = this.state\n    const { rowKey } = this.state.setting\n    const key = record[rowKey]\n    if (selectedRowKeys.includes(key)) {\n      selectedRowKeys = selectedRowKeys.filter(item => item !== key)\n      selectedRows = selectedRows.filter(item => item[rowKey] !== key)\n    } else {\n      selectedRowKeys.push(key)\n      selectedRows.push(record)\n    }\n    this.setState({ selectedRowKeys, selectedRows })\n  }\n\n  handleSelect (selectedRowKeys, selectedRows) {\n    this.setState({ selectedRowKeys, selectedRows })\n  }\n\n  handleColumnsSetting (column, key, value) {\n    const { columnsSetting } = this.state\n    _.set(columnsSetting, `${column.dataIndex}.${key}`, value)\n    this.setState({ columnsSetting }, () => {\n      this.saveSettingToLocal(this.state.cacheKey, Object.assign({ columnsSetting: this.state.columnsSetting }, this.state.setting))\n    })\n  }\n\n  handleTableChange (pagination, filters, sorter) {\n    const { data } = this.state\n    if (pagination) {\n      if (pagination.current) {\n        data.page = pagination.current\n      }\n      if (pagination.pageSize) {\n        data.size = pagination.pageSize\n      }\n    }\n    if (sorter) {\n      switch (sorter.order) {\n        case 'ascend':\n          data.sort = { [sorter.field]: 1 }\n          break\n        case 'descend':\n          data.sort = { [sorter.field]: -1 }\n          break\n        default:\n          data.sort = {}\n          break\n      }\n    }\n    if (filters) {\n      data.cond = data.cond || {}\n      for (const key in filters) {\n        const value = filters[key]\n        if (!value || (Array.isArray(value) && value.length === 0)) {\n          delete data.cond[key]\n          continue\n        }\n        if (Array.isArray(value)) {\n          if (value.length === 1) {\n            data.cond[key] = value[0]\n          } else {\n            data.cond[key] = {\n              $in: value\n            }\n          }\n        } else {\n          data.cond[key] = value\n        }\n      }\n    }\n    this.setState({ data }, this.fetchList)\n  }\n\n  handleCond (key, value, likeMode, callback) {\n    const { data } = this.state\n    data.cond = data.cond || {}\n    if (value) {\n      if (likeMode && _.isString(value)) {\n        data.cond[key] = {\n          $regex: value,\n          $options: 'mi'\n        }\n      } else {\n        data.cond[key] = value\n      }\n    } else {\n      delete data.cond[key]\n    }\n    this.setState({ data }, callback)\n  }\n\n  componentWillUnmount () {\n    this.setState = () => {}\n  }\n\n  render () {\n    const { data, selectedRowKeys, columns, settingModalVisible, columnsSetting, actionsSize, preData } = this.state\n    const { tableActions } = this.props\n    const setting = _.clone(this.state.setting)\n    setting.columns = columns.filter(column => {\n      const display = _.get(columnsSetting, `${column.dataIndex}.display`, true)\n      if (_.get(columnsSetting, `${column.dataIndex}.sorter`, false)) {\n        column.sorter = true\n      } else {\n        delete column.sorter\n      }\n      if (_.get(columnsSetting, `${column.dataIndex}.filter`, false)) {\n        let keyword = _.get(data.cond, column.dataIndex)\n        if (_.isPlainObject(keyword) && keyword.$regex) {\n          keyword = keyword.$regex\n        }\n\n        if (keyword) {\n          column.filterIcon = <Icon type={'filter'} theme={'filled'} style={{ color: '#108ee9' }} />\n        } else {\n          column.filterIcon = <Icon type={'filter'} style={{ color: '#aaa' }} />\n        }\n        const tips = `请输入${column.title}关键字`\n        let inputPart\n        if (column.title.length > 4) {\n          inputPart = (\n            <Tooltip title={tips}>\n              <Input\n                placeholder={tips}\n                value={keyword}\n                size={actionsSize}\n                style={{ width: 170 }}\n                onChange={e => this.handleCond(column.dataIndex, e.target.value, true)}\n                onPressEnter={() => this.fetchList()}\n              />\n            </Tooltip>\n          )\n        } else {\n          inputPart = (\n            <Input\n              placeholder={tips}\n              value={keyword}\n              size={actionsSize}\n              style={{ width: 170 }}\n              onChange={e => this.handleCond(column.dataIndex, e.target.value, true)}\n              onPressEnter={() => this.fetchList()}\n            />\n          )\n        }\n        column.filterDropdown = (\n          <div className={styles.customFilterDropdown}>\n            {inputPart}\n            <Button size={actionsSize} type={'primary'} onClick={() => this.fetchList()}>搜索</Button>\n            <Button size={actionsSize} onClick={() => this.handleCond(column.dataIndex, null, false, this.fetchList)}>清空</Button>\n          </div>\n        )\n      } else {\n        delete column.filterDropdown\n        delete column.filterIcon\n      }\n      return display\n    })\n    setting.dataSource = data.list\n    if (setting.fixedHeader) {\n      setting.scroll = { x: '110%', y: 500 }\n    }\n    if (setting.pageMode) {\n      setting.pagination = {\n        current: data.page || 1,\n        pageSize: data.size,\n        total: data.totalrecords\n      }\n    } else {\n      setting.pagination = false\n    }\n    if (setting.checkbox) {\n      setting.rowSelection = {\n        fixed: true,\n        selectedRowKeys,\n        onChange: this.handleSelect\n      }\n      setting.rowSelection.type = setting.rowSelectedType\n    }\n    if (setting.rowSelected) {\n      setting.onRow = record => ({\n        onClick: () => {\n          this.handleRowClick(record)\n        }\n      })\n    }\n    if (setting.resizeableHeader) {\n      setting.components = {\n        header: {\n          cell: this.resizeableTitle\n        }\n      }\n      setting.columns = columns.map((col, index) => {\n        return Object.assign(col, {\n          onHeaderCell: column => {\n            return {\n              width: column.width,\n              onResize: this.handleResize(index)\n            }\n          }\n        })\n      })\n    }\n    setting.onChange = this.handleTableChange\n    let customTableActions = []\n    if (Array.isArray(tableActions)) {\n      customTableActions = tableActions.map(item => item(actionsSize))\n    }\n    return (\n      <div className={styles.container}>\n        <div className={styles.toolbar} style={{ marginBottom: 16 }}>\n          <div className={styles.actions}>\n            <Button size={actionsSize} icon={'plus'} type={'primary'} onClick={this.handleAdd}>新增</Button>\n            <Popconfirm\n              title={'确认删除吗？'}\n              onConfirm={() => {\n                this.handleDel(null)\n              }}\n              okText={'确定'}\n              cancelText={'取消'}\n            >\n              <Button size={actionsSize} icon={'delete'} type={'danger'}>删除</Button>\n            </Popconfirm>\n            <Button size={actionsSize} icon={'sync'} onClick={this.handleSync}>刷新</Button>\n            {customTableActions}\n          </div>\n          <div className={styles.rightArea}>\n            <Button\n              icon={'setting'}\n              size={actionsSize}\n              onClick={() => {\n                this.setState({\n                  settingModalVisible: true\n                })\n              }}\n            />\n          </div>\n        </div>\n        <If cond={!setting.hideOnNoSelected || (setting.hideOnNoSelected === true && selectedRowKeys.length > 0)}>\n          <Alert\n            message={\n              <Fragment>\n                <span>\n                  <Fragment>已选择</Fragment>\n                  <a\n                    style={{ fontWeight: 600, margin: '0 5px' }}\n                    onClick={() => {\n                      if (this.state.selectedRowKeys.length === 0 || this.state.preData) {\n                        return\n                      }\n                      this.setState({\n                        preData: _.cloneDeep(this.state.data),\n                        data: Object.assign(_.cloneDeep(this.state.data), {\n                          page: 1,\n                          list: this.state.selectedRows,\n                          totalrecords: this.state.selectedRowKeys.length\n                        })\n                      })\n                    }}\n                  >\n                    {selectedRowKeys.length}\n                  </a>\n                  <React.Fragment>行</React.Fragment>\n                </span>\n                <If cond={selectedRowKeys.length > 0}>\n                  <a style={{ marginLeft: 24 }} onClick={() => (this.setState({ selectedRowKeys: [], selectedRows: [] }))}>清空</a>\n                </If>\n                <If cond={preData}>\n                  <a\n                    style={{ marginLeft: 8 }}\n                    onClick={() => {\n                      if (this.state.preData) {\n                        this.setState({\n                          data: this.state.preData,\n                          preData: null\n                        })\n                      }\n                    }}\n                  >\n                    撤销\n                  </a>\n                </If>\n              </Fragment>\n            }\n            type={'info'}\n            showIcon\n            style={{ marginBottom: 16 }}\n          />\n        </If>\n        <Table\n          {...setting}\n        />\n        <Modal\n          title={'Setting'}\n          visible={settingModalVisible}\n          onOk={() => {\n            this.setState({\n              settingModalVisible: false\n            })\n          }}\n          onCancel={() => {\n            this.setState({\n              settingModalVisible: false\n            })\n          }}\n          footer={null}\n        >\n          <Row>\n            <Col span={24}>\n              <section className={'fano-box'}>\n                <div className={'fano-box-title'}>常用设置</div>\n                <Row>\n                  <Col span={8}><Checkbox checked={setting.bordered} onChange={e => (this.handleSetting('bordered', e.target.checked))}>显示边框</Checkbox></Col>\n                  <Col span={8}><Checkbox checked={setting.showHeader} onChange={e => (this.handleSetting('showHeader', e.target.checked))}>显示列头</Checkbox></Col>\n                  <Col span={8}><Checkbox checked={setting.checkbox} onChange={e => (this.handleSetting('checkbox', e.target.checked))}>显示选择框</Checkbox></Col>\n                  <Col span={8}><Checkbox checked={setting.fixedHeader} onChange={e => (this.handleSetting('fixedHeader', e.target.checked))}>固定表头</Checkbox></Col>\n                  <Col span={8}><Checkbox checked={setting.rowSelected} onChange={e => (this.handleSetting('rowSelected', e.target.checked))}>支持行选中</Checkbox></Col>\n                  <Col span={8}><Checkbox checked={setting.pageMode} onChange={e => (this.handleSetting('pageMode', e.target.checked))}>支持分页</Checkbox></Col>\n                  <Col span={8}><Checkbox checked={setting.resizeableHeader} onChange={e => (this.handleSetting('resizeableHeader', e.target.checked))}>伸缩列</Checkbox></Col>\n                  <Col span={8}><Checkbox checked={setting.rowNo} onChange={e => (this.handleSetting('rowNo', e.target.checked))}>显示行号</Checkbox></Col>\n                  <Col span={12}><Checkbox checked={setting.hideOnNoSelected} onChange={e => (this.handleSetting('hideOnNoSelected', e.target.checked))}>未选择时隐藏提示</Checkbox></Col>\n                </Row>\n              </section>\n            </Col>\n            <Col span={24}>\n              <section className={'fano-box'}>\n                <div className={'fano-box-title'}>尺寸设置</div>\n                <Radio.Group\n                  onChange={e => (this.handleSetting('size', e.target.value))}\n                  value={setting.size}\n                >\n                  <Radio value={'default'}>Default</Radio>\n                  <Radio value={'middle'}>Middle</Radio>\n                  <Radio value={'small'}>Small</Radio>\n                </Radio.Group>\n              </section>\n            </Col>\n            <Col span={24}>\n              <section className={'fano-box'}>\n                <div className={'fano-box-title'}>字段设置</div>\n                <div className={styles.fieldsSetting}>\n                  {columns.map(column => {\n                    return (\n                      <div key={column.dataIndex} className={styles.fieldSetting}>\n                        <Tooltip title={column.title}>\n                          <span className={styles.fieldSettingLabel}>{column.title}：</span>\n                        </Tooltip>\n                        <Checkbox checked={_.get(columnsSetting, `${column.dataIndex}.display`, true)} onChange={e => (this.handleColumnsSetting(column, 'display', e.target.checked))}>是否显示</Checkbox>\n                        <Checkbox checked={_.get(columnsSetting, `${column.dataIndex}.sorter`, false)} onChange={e => (this.handleColumnsSetting(column, 'sorter', e.target.checked))}>是否排序</Checkbox>\n                        <Checkbox checked={_.get(columnsSetting, `${column.dataIndex}.filter`, false)} onChange={e => (this.handleColumnsSetting(column, 'filter', e.target.checked))}>快速筛选</Checkbox>\n                      </div>\n                    )\n                  })}\n                </div>\n              </section>\n            </Col>\n          </Row>\n        </Modal>\n      </div>\n    )\n  }\n}\n"],"file":"DynamicTable.js"}