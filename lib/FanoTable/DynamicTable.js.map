{"version":3,"sources":["../../src/FanoTable/DynamicTable.jsx"],"names":["DynamicTable","props","cacheKey","config","name","toUpperCase","cachedSetting","loadSettingFromLocal","data","list","Array","isArray","values","showActions","_","get","split","handleResize","index","e","size","setState","columns","nextColumns","width","handleDel","bind","handleAdd","handleEdit","handleSync","handleSetting","handleSelect","handleRowClick","handleTableChange","handleColumnsSetting","setting","merge","fixedHeader","rowSelected","checkbox","pageMode","loading","nativeSetting","expandSetting","version","clearLocalSetting","wrapColumnsDefaultProps","state","actionsSize","transformActionsSize","columnsSetting","selectedRowKeys","selectedRows","settingModalVisible","key","JSON","parse","window","localStorage","getItem","omit","isPlainObject","setItem","removeItem","fetchList","rowNoColumn","title","dataIndex","rawColumns","rowNo","find","item","unshift","getRowNoColumn","column","undefined","render","isFunction","text","record","tip","includes","img","push","presetActions","cursor","color","actionsColumn","fixed","actions","cloneDeep","rowActions","ret","i","length","action","filter","url","s","lastIndexOf","query","qs","substr","substring","range","page","sort","value","parseInt","join","isString","project","cond","stringify","onResize","restProps","listUrl","wrapQueryString","json","console","warn","onAdd","onEdit","rowKey","warning","success","onDel","deleteUrl","onSetting","saveSettingToLocal","settingSize","set","pagination","filters","sorter","current","pageSize","order","field","$in","likeMode","callback","$regex","$options","preData","tableActions","clone","display","keyword","filterIcon","tips","inputPart","handleCond","target","filterDropdown","styles","customFilterDropdown","dataSource","scroll","x","y","total","totalrecords","rowSelection","onChange","type","rowSelectedType","onRow","onClick","resizeableHeader","components","header","cell","resizeableTitle","map","col","onHeaderCell","customTableActions","container","toolbar","marginBottom","rightArea","hideOnNoSelected","fontWeight","margin","marginLeft","bordered","checked","showHeader","fieldsSetting","fieldSetting","fieldSettingLabel","React","Component"],"mappings":"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","file":"DynamicTable.js","sourcesContent":["import React, { Fragment } from 'react'\nimport _ from 'lodash'\nimport qs from 'qs'\nimport { Table, Button, Popconfirm, Divider, Icon, Checkbox, Modal, Radio, Row, Col, Tooltip, Alert, Input, message } from 'antd'\nimport { Resizable } from 'react-resizable'\nimport { get, del } from '../utils/request'\nimport { If } from '../components/Directives'\nimport styles from './DynamicTable.less'\n\nexport default class DynamicTable extends React.Component {\n  constructor (props) {\n    super(props)\n    const cacheKey = `FanoTable_${props.config.name}_setting`.toUpperCase()\n    const cachedSetting = this.loadSettingFromLocal(cacheKey)\n    const data = {\n      list: Array.isArray(props.values) ? props.values : []\n    }\n    const showActions = _.get(this, 'props.config.showActions', 'del,sync,new,delRow,editRow').split(',')\n    this.handleResize = (index) => {\n      return (e, { size }) => {\n        this.setState(({ columns }) => {\n          const nextColumns = [...columns]\n          nextColumns[index] = Object.assign({}, nextColumns[index], {\n            width: size.width\n          })\n          return { columns: nextColumns }\n        })\n      }\n    }\n    this.handleDel = this.handleDel.bind(this)\n    this.handleAdd = this.handleAdd.bind(this)\n    this.handleEdit = this.handleEdit.bind(this)\n    this.handleSync = this.handleSync.bind(this)\n    this.handleSetting = this.handleSetting.bind(this)\n    this.handleSelect = this.handleSelect.bind(this)\n    this.handleRowClick = this.handleRowClick.bind(this)\n    this.handleTableChange = this.handleTableChange.bind(this)\n    this.handleColumnsSetting = this.handleColumnsSetting.bind(this)\n    const setting = _.merge({\n      size: 'middle',\n      fixedHeader: true,\n      rowSelected: true,\n      checkbox: true,\n      pageMode: true,\n      loading: false\n    }, props.config.setting, props.nativeSetting, props.expandSetting)\n    if (!setting.version || (setting.version && setting.version === _.get(cachedSetting, 'setting.version'))) {\n      _.merge(setting, cachedSetting.setting)\n    } else {\n      this.clearLocalSetting(cacheKey)\n    }\n    const columns = this.wrapColumnsDefaultProps(props.config.columns, showActions, setting)\n    this.state = {\n      cacheKey,\n      actionsSize: this.transformActionsSize(),\n      setting,\n      data,\n      columns,\n      columnsSetting: cachedSetting.columnsSetting,\n      showActions,\n      selectedRowKeys: [],\n      selectedRows: [],\n      settingModalVisible: false\n    }\n  }\n\n  loadSettingFromLocal (key) {\n    const setting = JSON.parse(window.localStorage.getItem(key) || '{}')\n    return {\n      setting: _.omit(setting, 'columnsSetting'),\n      columnsSetting: setting.columnsSetting || {}\n    }\n  }\n\n  saveSettingToLocal (key, setting) {\n    if (_.isPlainObject(setting)) {\n      setting = JSON.stringify(setting)\n    }\n    window.localStorage.setItem(key, setting)\n  }\n\n  clearLocalSetting (key) {\n    window.localStorage.removeItem(key)\n  }\n\n  componentWillMount () {\n    this.fetchList()\n  }\n\n  getRowNoColumn () {\n    return this.rowNoColumn || {\n      title: 'No.',\n      dataIndex: 'rowNo',\n      width: 60\n    }\n  }\n\n  wrapColumnsDefaultProps (rawColumns, showActions, setting) {\n    let columns = []\n    if (setting.rowNo && !rawColumns.find(item => item.dataIndex === 'rowNo')) {\n      rawColumns.unshift(this.getRowNoColumn())\n    }\n    for (const column of rawColumns) {\n      if (column.width === undefined) {\n        column.width = setting.width || 150\n      }\n      const render = column.render\n      if (_.isFunction(render)) {\n        column.render = (text, record) => {\n          text = render(text, record)\n          if (column.tip) {\n            text = <Tooltip title={text}>{text}</Tooltip>\n          }\n          return text\n        }\n      } else if (!['actions'].includes(column.dataIndex)) {\n        column.render = (text) => {\n          if (column.img) {\n            text = <img src={text} alt={text} height={30} />\n          } else {\n            text = <span>{text}</span>\n          }\n          if (column.tip) {\n            text = <Tooltip title={text}>{text}</Tooltip>\n          }\n          return text\n        }\n      }\n      columns.push(column)\n    }\n    const presetActions = []\n    if (showActions.includes('editRow')) {\n      presetActions.push((text, record) => {\n        return (\n          <Icon\n            key={'edit'}\n            type={'edit'}\n            style={{ cursor: 'pointer' }}\n            onClick={() => {\n              this.handleEdit(record)\n            }}\n          />\n        )\n      })\n    }\n    if (showActions.includes('delRow')) {\n      presetActions.push((text, record) => {\n        return (\n          <Popconfirm\n            title={'确认删除吗？'}\n            onConfirm={() => {\n              this.handleDel(record)\n            }}\n            key={'del'}\n            okText={'确定'}\n            cancelText={'取消'}\n          >\n            <Icon key={'delete'} type={'delete'} style={{ cursor: 'pointer', color: '#f5222d' }} />\n          </Popconfirm>\n        )\n      })\n    }\n    // 添加操作列\n    const actionsColumn = {\n      title: '操作',\n      dataIndex: 'actions',\n      fixed: 'right',\n      width: 80,\n      render: (text, record) => {\n        const actions = _.cloneDeep(presetActions)\n        const { actionsSize } = this.state\n        if (Array.isArray(this.props.rowActions)) {\n          for (const item of this.props.rowActions) {\n            if (_.isFunction(item)) {\n              actions.push(item(record, actionsSize))\n            }\n          }\n        }\n        const ret = []\n        for (let i = 0; i < actions.length; i++) {\n          let action = actions[i]\n          if (_.isFunction(action)) {\n            action = action(text, record)\n          }\n          ret.push(action)\n          if (i < actions.length - 1) {\n            ret.push(<Divider type={'vertical'} key={i} />)\n          }\n        }\n        return ret\n      }\n    }\n    columns = columns.filter(column => {\n      if (column.dataIndex === 'actions') {\n        _.merge(actionsColumn, column)\n        if (actionsColumn.width === '-' || !actionsColumn.width) {\n          delete actionsColumn.width\n        }\n        return false\n      }\n      if (column.width === '-' || !column.width) {\n        delete column.width\n      }\n      return true\n    })\n    columns.push(actionsColumn)\n    this.rowNoColumn = _.find(columns, item => item.dataIndex === 'rowNo')\n    return columns\n  }\n\n  wrapQueryString (url) {\n    const { data } = this.state\n    const s = url.lastIndexOf('?')\n    const query = {}\n    if (s > 0) {\n      Object.assign(query, qs.parse(url.substr(s + 1)))\n      url = url.substring(0, s)\n    }\n    if (data.range) {\n      query.range = data.range\n    }\n    if (data.page) {\n      query.page = data.page\n    }\n    if (data.size) {\n      query.size = data.size\n    }\n    if (data.sort) {\n      if (_.isPlainObject(data.sort)) {\n        const sort = []\n        for (const key in data.sort) {\n          const value = data.sort[key]\n          if (parseInt(value) === -1) {\n            sort.push(`-${key}`)\n          } else {\n            sort.push(key)\n          }\n        }\n        query.sort = sort.join(',')\n      } else if (_.isString(data.sort)) {\n        query.sort = data.sort\n      }\n    }\n    if (data.project) {\n      if (_.isPlainObject(data.project)) {\n        const project = []\n        for (const key in data.project) {\n          const value = data.project[key]\n          if (parseInt(value) === 0) {\n            project.push(`-${key}`)\n          } else {\n            project.push(key)\n          }\n        }\n        query.project = project.join(',')\n      } else if (_.isString(data.project)) {\n        query.project = data.project\n      }\n    }\n    if (data.cond) {\n      if (_.isPlainObject(data.cond)) {\n        query.cond = JSON.stringify(data.cond)\n      } else if (_.isString(data.cond)) {\n        query.cond = data.cond\n      }\n    }\n    return `${url}?${qs.stringify(query)}`\n  }\n\n  resizeableTitle (props) {\n    const { onResize, width } = props\n    const restProps = _.omit(props, 'onResize', 'width')\n    if (!width) {\n      return <th {...restProps} />\n    }\n    return (\n      <Resizable width={width} height={0} onResize={onResize}>\n        <th {...restProps} />\n      </Resizable>\n    )\n  }\n\n  async fetchList () {\n    let { setting } = this.state\n    setting.loading = true\n    this.setState({ setting })\n    const { listUrl } = this.props.config\n    const url = this.wrapQueryString(listUrl)\n    const json = await get(url)\n    setting = this.state.setting\n    setting.loading = false\n    if (Array.isArray(_.get(json, 'list'))) {\n      for (let i = 0; i < json.list.length; i++) {\n        const item = json.list[i]\n        item.rowNo = (json.page - 1) * json.size + i + 1\n      }\n      this.setState({\n        data: json,\n        setting\n      })\n    } else {\n      console.warn(`Invalid 'url' format`)\n      this.setState({\n        setting\n      })\n    }\n  }\n\n  handleSync () {\n    this.fetchList()\n  }\n\n  handleAdd () {\n    if (_.isFunction(this.props.onAdd)) {\n      this.props.onAdd()\n    }\n  }\n\n  handleEdit () {\n    if (_.isFunction(this.props.onEdit)) {\n      this.props.onEdit()\n    }\n  }\n\n  async handleDel (record) {\n    const { rowKey } = this.state.setting\n    let { selectedRowKeys, selectedRows } = this.state\n    if (record) {\n      selectedRowKeys = [record[rowKey]]\n      selectedRows = [record]\n    }\n    if (selectedRowKeys.length === 0) {\n      message.warning('请先选择需要删除的数据')\n    }\n    let success = false\n    if (_.isFunction(this.props.onDel)) {\n      this.props.onDel(selectedRowKeys, selectedRows)\n      success = true\n    } else {\n      const { deleteUrl } = this.props.config\n      if (deleteUrl) {\n        const ret = await del(deleteUrl, {\n          cond: {\n            [rowKey]: selectedRowKeys\n          }\n        })\n        if (ret) {\n          message.success(`已成功删除 ${selectedRowKeys.length} 条记录`, 5)\n          success = true\n        }\n      }\n    }\n    if (success) {\n      this.setState({\n        selectedRowKeys: [],\n        selectedRows: []\n      }, this.fetchList)\n    }\n  }\n\n  handleSetting (key, value) {\n    let { setting, columns } = this.state\n    setting[key] = value\n    if (_.isFunction(this.props.onSetting)) {\n      this.props.onSetting(setting)\n    }\n    const state = { setting }\n    if (key === 'size') {\n      state.actionsSize = this.transformActionsSize(value)\n    } else if (key === 'rowNo') {\n      if (value) {\n        columns.unshift(this.getRowNoColumn())\n      } else {\n        columns = columns.filter(item => item.dataIndex !== 'rowNo')\n      }\n      state.columns = columns\n    }\n    this.setState(state, () => {\n      this.saveSettingToLocal(this.state.cacheKey, Object.assign({ columnsSetting: this.state.columnsSetting }, this.state.setting))\n    })\n  }\n\n  transformActionsSize (settingSize) {\n    return {\n      'default': 'large',\n      'middle': 'default',\n      'small': 'small'\n    }[settingSize] || 'default'\n  }\n\n  handleRowClick (record, e) {\n    let { selectedRowKeys, selectedRows } = this.state\n    const { rowKey } = this.state.setting\n    const key = record[rowKey]\n    if (selectedRowKeys.includes(key)) {\n      selectedRowKeys = selectedRowKeys.filter(item => item !== key)\n      selectedRows = selectedRows.filter(item => item[rowKey] !== key)\n    } else {\n      selectedRowKeys.push(key)\n      selectedRows.push(record)\n    }\n    this.setState({ selectedRowKeys, selectedRows })\n  }\n\n  handleSelect (selectedRowKeys, selectedRows) {\n    this.setState({ selectedRowKeys, selectedRows })\n  }\n\n  handleColumnsSetting (column, key, value) {\n    const { columnsSetting } = this.state\n    _.set(columnsSetting, `${column.dataIndex}.${key}`, value)\n    this.setState({ columnsSetting }, () => {\n      this.saveSettingToLocal(this.state.cacheKey, Object.assign({ columnsSetting: this.state.columnsSetting }, this.state.setting))\n    })\n  }\n\n  handleTableChange (pagination, filters, sorter) {\n    const { data } = this.state\n    if (pagination) {\n      if (pagination.current) {\n        data.page = pagination.current\n      }\n      if (pagination.pageSize) {\n        data.size = pagination.pageSize\n      }\n    }\n    if (sorter) {\n      switch (sorter.order) {\n        case 'ascend':\n          data.sort = { [sorter.field]: 1 }\n          break\n        case 'descend':\n          data.sort = { [sorter.field]: -1 }\n          break\n        default:\n          data.sort = {}\n          break\n      }\n    }\n    if (filters) {\n      data.cond = data.cond || {}\n      for (const key in filters) {\n        const value = filters[key]\n        if (!value || (Array.isArray(value) && value.length === 0)) {\n          delete data.cond[key]\n          continue\n        }\n        if (Array.isArray(value)) {\n          if (value.length === 1) {\n            data.cond[key] = value[0]\n          } else {\n            data.cond[key] = {\n              $in: value\n            }\n          }\n        } else {\n          data.cond[key] = value\n        }\n      }\n    }\n    this.setState({ data }, this.fetchList)\n  }\n\n  handleCond (key, value, likeMode, callback) {\n    const { data } = this.state\n    data.cond = data.cond || {}\n    if (value) {\n      if (likeMode && _.isString(value)) {\n        data.cond[key] = {\n          $regex: value,\n          $options: 'mi'\n        }\n      } else {\n        data.cond[key] = value\n      }\n    } else {\n      delete data.cond[key]\n    }\n    this.setState({ data }, callback)\n  }\n\n  componentWillUnmount () {\n    this.setState = () => {}\n  }\n\n  render () {\n    const { data, selectedRowKeys, columns, settingModalVisible, columnsSetting, actionsSize, preData } = this.state\n    const { tableActions } = this.props\n    const setting = _.clone(this.state.setting)\n    setting.columns = columns.filter(column => {\n      const display = _.get(columnsSetting, `${column.dataIndex}.display`, true)\n      if (_.get(columnsSetting, `${column.dataIndex}.sorter`, false)) {\n        column.sorter = true\n      } else {\n        delete column.sorter\n      }\n      if (_.get(columnsSetting, `${column.dataIndex}.filter`, false)) {\n        let keyword = _.get(data.cond, column.dataIndex)\n        if (_.isPlainObject(keyword) && keyword.$regex) {\n          keyword = keyword.$regex\n        }\n\n        if (keyword) {\n          column.filterIcon = <Icon type={'filter'} theme={'filled'} style={{ color: '#108ee9' }} />\n        } else {\n          column.filterIcon = <Icon type={'filter'} style={{ color: '#aaa' }} />\n        }\n        const tips = `请输入${column.title}关键字`\n        let inputPart\n        if (column.title.length > 4) {\n          inputPart = (\n            <Tooltip title={tips}>\n              <Input\n                placeholder={tips}\n                value={keyword}\n                size={actionsSize}\n                style={{ width: 170 }}\n                onChange={e => this.handleCond(column.dataIndex, e.target.value, true)}\n                onPressEnter={() => this.fetchList()}\n              />\n            </Tooltip>\n          )\n        } else {\n          inputPart = (\n            <Input\n              placeholder={tips}\n              value={keyword}\n              size={actionsSize}\n              style={{ width: 170 }}\n              onChange={e => this.handleCond(column.dataIndex, e.target.value, true)}\n              onPressEnter={() => this.fetchList()}\n            />\n          )\n        }\n        column.filterDropdown = (\n          <div className={styles.customFilterDropdown}>\n            {inputPart}\n            <Button size={actionsSize} type={'primary'} onClick={() => this.fetchList()}>搜索</Button>\n            <Button size={actionsSize} onClick={() => this.handleCond(column.dataIndex, null, false, this.fetchList)}>清空</Button>\n          </div>\n        )\n      } else {\n        delete column.filterDropdown\n        delete column.filterIcon\n      }\n      return display\n    })\n    setting.dataSource = data.list\n    if (setting.fixedHeader) {\n      setting.scroll = { x: '110%', y: 500 }\n    }\n    if (setting.pageMode) {\n      setting.pagination = {\n        current: data.page || 1,\n        pageSize: data.size,\n        total: data.totalrecords\n      }\n    } else {\n      setting.pagination = false\n    }\n    if (setting.checkbox) {\n      setting.rowSelection = {\n        fixed: true,\n        selectedRowKeys,\n        onChange: this.handleSelect\n      }\n      setting.rowSelection.type = setting.rowSelectedType\n    }\n    if (setting.rowSelected) {\n      setting.onRow = record => ({\n        onClick: () => {\n          this.handleRowClick(record)\n        }\n      })\n    }\n    if (setting.resizeableHeader) {\n      setting.components = {\n        header: {\n          cell: this.resizeableTitle\n        }\n      }\n      setting.columns = columns.map((col, index) => {\n        return Object.assign(col, {\n          onHeaderCell: column => {\n            return {\n              width: column.width,\n              onResize: this.handleResize(index)\n            }\n          }\n        })\n      })\n    }\n    setting.onChange = this.handleTableChange\n    let customTableActions = []\n    if (Array.isArray(tableActions)) {\n      customTableActions = tableActions.map(item => item(actionsSize))\n    }\n    return (\n      <div className={styles.container}>\n        <div className={styles.toolbar} style={{ marginBottom: 16 }}>\n          <div className={styles.actions}>\n            <Button size={actionsSize} icon={'plus'} type={'primary'} onClick={this.handleAdd}>新增</Button>\n            <Popconfirm\n              title={'确认删除吗？'}\n              onConfirm={() => {\n                this.handleDel(null)\n              }}\n              okText={'确定'}\n              cancelText={'取消'}\n            >\n              <Button size={actionsSize} icon={'delete'} type={'danger'}>删除</Button>\n            </Popconfirm>\n            <Button size={actionsSize} icon={'sync'} onClick={this.handleSync}>刷新</Button>\n            {customTableActions}\n          </div>\n          <div className={styles.rightArea}>\n            <Button\n              icon={'setting'}\n              size={actionsSize}\n              onClick={() => {\n                this.setState({\n                  settingModalVisible: true\n                })\n              }}\n            />\n          </div>\n        </div>\n        <If cond={!setting.hideOnNoSelected || (setting.hideOnNoSelected === true && selectedRowKeys.length > 0)}>\n          <Alert\n            message={\n              <Fragment>\n                <span>\n                  <Fragment>已选择</Fragment>\n                  <a\n                    style={{ fontWeight: 600, margin: '0 5px' }}\n                    onClick={() => {\n                      if (this.state.selectedRowKeys.length === 0 || this.state.preData) {\n                        return\n                      }\n                      this.setState({\n                        preData: _.cloneDeep(this.state.data),\n                        data: Object.assign(_.cloneDeep(this.state.data), {\n                          page: 1,\n                          list: this.state.selectedRows,\n                          totalrecords: this.state.selectedRowKeys.length\n                        })\n                      })\n                    }}\n                  >\n                    {selectedRowKeys.length}\n                  </a>\n                  <React.Fragment>行</React.Fragment>\n                </span>\n                <If cond={selectedRowKeys.length > 0}>\n                  <a style={{ marginLeft: 24 }} onClick={() => (this.setState({ selectedRowKeys: [], selectedRows: [] }))}>清空</a>\n                </If>\n                <If cond={preData}>\n                  <a\n                    style={{ marginLeft: 8 }}\n                    onClick={() => {\n                      if (this.state.preData) {\n                        this.setState({\n                          data: this.state.preData,\n                          preData: null\n                        })\n                      }\n                    }}\n                  >\n                    撤销\n                  </a>\n                </If>\n              </Fragment>\n            }\n            type={'info'}\n            showIcon\n            style={{ marginBottom: 16 }}\n          />\n        </If>\n        <Table\n          {...setting}\n        />\n        <Modal\n          title={'Setting'}\n          visible={settingModalVisible}\n          onOk={() => {\n            this.setState({\n              settingModalVisible: false\n            })\n          }}\n          onCancel={() => {\n            this.setState({\n              settingModalVisible: false\n            })\n          }}\n          footer={null}\n        >\n          <Row>\n            <Col span={24}>\n              <section className={'fano-box'}>\n                <div className={'fano-box-title'}>常用设置</div>\n                <Row>\n                  <Col span={8}><Checkbox checked={setting.bordered} onChange={e => (this.handleSetting('bordered', e.target.checked))}>显示边框</Checkbox></Col>\n                  <Col span={8}><Checkbox checked={setting.showHeader} onChange={e => (this.handleSetting('showHeader', e.target.checked))}>显示列头</Checkbox></Col>\n                  <Col span={8}><Checkbox checked={setting.checkbox} onChange={e => (this.handleSetting('checkbox', e.target.checked))}>显示选择框</Checkbox></Col>\n                  <Col span={8}><Checkbox checked={setting.fixedHeader} onChange={e => (this.handleSetting('fixedHeader', e.target.checked))}>固定表头</Checkbox></Col>\n                  <Col span={8}><Checkbox checked={setting.rowSelected} onChange={e => (this.handleSetting('rowSelected', e.target.checked))}>支持行选中</Checkbox></Col>\n                  <Col span={8}><Checkbox checked={setting.pageMode} onChange={e => (this.handleSetting('pageMode', e.target.checked))}>支持分页</Checkbox></Col>\n                  <Col span={8}><Checkbox checked={setting.resizeableHeader} onChange={e => (this.handleSetting('resizeableHeader', e.target.checked))}>伸缩列</Checkbox></Col>\n                  <Col span={8}><Checkbox checked={setting.rowNo} onChange={e => (this.handleSetting('rowNo', e.target.checked))}>显示行号</Checkbox></Col>\n                  <Col span={12}><Checkbox checked={setting.hideOnNoSelected} onChange={e => (this.handleSetting('hideOnNoSelected', e.target.checked))}>未选择时隐藏提示</Checkbox></Col>\n                </Row>\n              </section>\n            </Col>\n            <Col span={24}>\n              <section className={'fano-box'}>\n                <div className={'fano-box-title'}>尺寸设置</div>\n                <Radio.Group\n                  onChange={e => (this.handleSetting('size', e.target.value))}\n                  value={setting.size}\n                >\n                  <Radio value={'default'}>Default</Radio>\n                  <Radio value={'middle'}>Middle</Radio>\n                  <Radio value={'small'}>Small</Radio>\n                </Radio.Group>\n              </section>\n            </Col>\n            <Col span={24}>\n              <section className={'fano-box'}>\n                <div className={'fano-box-title'}>字段设置</div>\n                <div className={styles.fieldsSetting}>\n                  {columns.map(column => {\n                    return (\n                      <div key={column.dataIndex} className={styles.fieldSetting}>\n                        <Tooltip title={column.title}>\n                          <span className={styles.fieldSettingLabel}>{column.title}：</span>\n                        </Tooltip>\n                        <Checkbox checked={_.get(columnsSetting, `${column.dataIndex}.display`, true)} onChange={e => (this.handleColumnsSetting(column, 'display', e.target.checked))}>是否显示</Checkbox>\n                        <Checkbox checked={_.get(columnsSetting, `${column.dataIndex}.sorter`, false)} onChange={e => (this.handleColumnsSetting(column, 'sorter', e.target.checked))}>是否排序</Checkbox>\n                        <Checkbox checked={_.get(columnsSetting, `${column.dataIndex}.filter`, false)} onChange={e => (this.handleColumnsSetting(column, 'filter', e.target.checked))}>快速筛选</Checkbox>\n                      </div>\n                    )\n                  })}\n                </div>\n              </section>\n            </Col>\n          </Row>\n        </Modal>\n      </div>\n    )\n  }\n}\n"]}