{"version":3,"sources":["../../../src/FanoForm/types/select.jsx"],"names":["SelectOption","Option","OptGroup","FanoFormSelect","props","injectProps","field","url","dict","options","max","remoteSearch","state","plainValues","map","o","value","transformed","transformProps","disabledOptions","getDisabledOptions","multi","onChange","bind","onSearch","_","isNumber","length","difference","allowCreate","allowInput","mode","showSearch","includes","dictUrl","c","isEmpty","fetchOptions","Error","qs","stringify","cond","JSON","code","beforeFetch","isFunction","then","json","Array","isArray","get","list","setState","catch","e","option","Object","assign","children","label","groupChildren","disabled","indexOf","groupItems","item","push","React","Component"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport qs from 'qs'\nimport { Select } from 'antd'\nimport _ from 'lodash'\nimport { get } from '../../utils/request'\nimport { getProps } from '../../utils/form'\n\nconst SelectOption = Select.Option\nconst OptGroup = Select.OptGroup\n\nexport default class FanoFormSelect extends React.Component {\n  constructor (props) {\n    super(props)\n    const { url, dict, options = [], max, remoteSearch } = props.injectProps.field.props\n    this.state = {\n      url,\n      dict,\n      options,\n      max,\n      remoteSearch,\n      plainValues: options.map(o => o.value),\n      transformed: this.transformProps()\n    }\n    this.state.disabledOptions = this.getDisabledOptions(this.state.plainValues, this.props.value)\n    this.state.multi = !!this.state.transformed.multi\n    this.onChange = this.onChange.bind(this)\n    this.onSearch = this.onSearch.bind(this)\n  }\n\n  getDisabledOptions (plainValues, value) {\n    const { max, multi } = this.state\n    if (multi === true) {\n      let disabledOptions = []\n      if (_.isNumber(max) && value.length >= max) {\n        if (value.length > max) {\n          value = this.props.value\n        }\n        disabledOptions = _.difference(plainValues, value)\n      }\n      return disabledOptions\n    }\n    return this.state.disabledOptions || []\n  }\n\n  transformProps () {\n    const props = { multi: true }\n    const { max, allowCreate, allowInput } = this.props.injectProps.field.props\n    if (_.isNumber(max)) {\n      if (max > 1) {\n        props.mode = 'multiple'\n        if (allowCreate === true) {\n          props.mode = 'tags'\n        }\n      }\n    } else {\n      props.mode = 'multiple'\n    }\n\n    if (allowInput === true) {\n      props.showSearch = true\n    }\n    props.multi = ['multiple', 'tags'].includes(props.mode)\n    return props\n  }\n\n  componentDidMount () {\n    const { dictUrl } = this.props.injectProps.c\n    if (_.isEmpty(this.state.options)) {\n      if (!_.isEmpty(this.state.url)) {\n        this.fetchOptions(this.state.url)\n      } else if (!_.isEmpty(this.state.dict)) {\n        if (_.isEmpty(dictUrl)) {\n          throw new Error(`Invalid 'dictUrl'`)\n        }\n        this.fetchOptions(`${dictUrl}?${qs.stringify({\n          cond: JSON.stringify({ code: this.state.dict }, null, 0)\n        })}`)\n      }\n    }\n  }\n\n  fetchOptions (url) {\n    const { beforeFetch } = this.props.injectProps.field.props\n    if (_.isFunction(beforeFetch)) {\n      url = beforeFetch(url, this.props.injectProps.field)\n    }\n    get(url)\n      .then(json => {\n        if (Array.isArray(_.get(json, 'list'))) {\n          const state = {\n            options: json.list,\n            plainValues: json.list.map(o => o.value)\n          }\n          state.disabledOptions = this.getDisabledOptions(state.plainValues, this.props.value)\n          this.setState(state)\n        } else {\n          throw new Error(`Invalid 'url' format`)\n        }\n      })\n      .catch(e => { throw e })\n  }\n\n  onChange (value, option) {\n    this.setState({ disabledOptions: this.getDisabledOptions(this.state.plainValues, value) })\n    return this.props.onChange(value, option)\n  }\n\n  onSearch (value) {\n    this.fetchOptions(`${this.state.url}?${qs.stringify({\n      cond: JSON.stringify({ value }, null, 0)\n    })}`)\n  }\n\n  render () {\n    const { options, disabledOptions, transformed, remoteSearch, multi } = this.state\n    const props = getProps(this.props, [\n      'placeholder',\n      'allowClear',\n      'disabled'\n    ])\n    Object.assign(props, transformed)\n    const children = []\n    for (const option of options) {\n      const { label, value, children: groupChildren } = option\n      const disabled = disabledOptions.indexOf(value) >= 0\n      if (Array.isArray(groupChildren)) {\n        const groupItems = []\n        for (const item of groupChildren) {\n          groupItems.push(\n            <SelectOption key={item.value} value={item.value} disabled={disabled}>{item.label}</SelectOption>\n          )\n        }\n        children.push(\n          <OptGroup key={label} label={label}>{groupItems}</OptGroup>\n        )\n      } else {\n        children.push(\n          <SelectOption key={value} value={value} disabled={disabled}>{label}</SelectOption>\n        )\n      }\n    }\n    if (multi === true) {\n      props.onChange = this.onChange\n    }\n    if (remoteSearch === true) {\n      props.onSearch = this.onSearch\n    }\n    return (\n      <Select {...props}>{children}</Select>\n    )\n  }\n}\n"],"file":"select.js"}