{"version":3,"sources":["../../../src/FanoForm/types/select.jsx"],"names":["SelectOption","Option","OptGroup","FanoFormSelect","props","injectProps","field","url","dict","options","max","remoteSearch","state","plainValues","map","o","value","transformed","transformProps","disabledOptions","getDisabledOptions","multi","onChange","bind","onSearch","_","isNumber","length","difference","allowCreate","allowInput","mode","showSearch","includes","dictUrl","c","isEmpty","fetchOptions","Error","qs","stringify","cond","code","beforeFetch","isFunction","then","Array","isArray","get","json","list","setState","catch","e","option","children","label","groupChildren","disabled","indexOf","groupItems","item","push","React","Component"],"mappings":"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","file":"select.js","sourcesContent":["\nimport React from 'react'\nimport qs from 'qs'\nimport { Select } from 'antd'\nimport _ from 'lodash'\nimport { get } from '../../utils/request'\nimport { getProps } from '../../utils/form'\n\nconst SelectOption = Select.Option\nconst OptGroup = Select.OptGroup\n\nexport default class FanoFormSelect extends React.Component {\n  constructor (props) {\n    super(props)\n    const { url, dict, options = [], max, remoteSearch } = props.injectProps.field.props\n    this.state = {\n      url,\n      dict,\n      options,\n      max,\n      remoteSearch,\n      plainValues: options.map(o => o.value),\n      transformed: this.transformProps()\n    }\n    this.state.disabledOptions = this.getDisabledOptions(this.state.plainValues, this.props.value)\n    this.state.multi = !!this.state.transformed.multi\n    this.onChange = this.onChange.bind(this)\n    this.onSearch = this.onSearch.bind(this)\n  }\n\n  getDisabledOptions (plainValues, value) {\n    const { max, multi } = this.state\n    if (multi === true) {\n      let disabledOptions = []\n      if (_.isNumber(max) && value.length >= max) {\n        if (value.length > max) {\n          value = this.props.value\n        }\n        disabledOptions = _.difference(plainValues, value)\n      }\n      return disabledOptions\n    }\n    return this.state.disabledOptions || []\n  }\n\n  transformProps () {\n    const props = { multi: true }\n    const { max, allowCreate, allowInput } = this.props.injectProps.field.props\n    if (_.isNumber(max)) {\n      if (max > 1) {\n        props.mode = 'multiple'\n        if (allowCreate === true) {\n          props.mode = 'tags'\n        }\n      }\n    } else {\n      props.mode = 'multiple'\n    }\n\n    if (allowInput === true) {\n      props.showSearch = true\n    }\n    props.multi = ['multiple', 'tags'].includes(props.mode)\n    return props\n  }\n\n  componentDidMount () {\n    const { dictUrl } = this.props.injectProps.c\n    if (_.isEmpty(this.state.options)) {\n      if (!_.isEmpty(this.state.url)) {\n        this.fetchOptions(this.state.url)\n      } else if (!_.isEmpty(this.state.dict)) {\n        if (_.isEmpty(dictUrl)) {\n          throw new Error(`Invalid 'dictUrl'`)\n        }\n        this.fetchOptions(`${dictUrl}?${qs.stringify({\n          cond: JSON.stringify({ code: this.state.dict }, null, 0)\n        })}`)\n      }\n    }\n  }\n\n  fetchOptions (url) {\n    const { beforeFetch } = this.props.injectProps.field.props\n    if (_.isFunction(beforeFetch)) {\n      url = beforeFetch(url, this.props.injectProps.field)\n    }\n    get(url)\n      .then(json => {\n        if (Array.isArray(_.get(json, 'list'))) {\n          const state = {\n            options: json.list,\n            plainValues: json.list.map(o => o.value)\n          }\n          state.disabledOptions = this.getDisabledOptions(state.plainValues, this.props.value)\n          this.setState(state)\n        } else {\n          throw new Error(`Invalid 'url' format`)\n        }\n      })\n      .catch(e => { throw e })\n  }\n\n  onChange (value, option) {\n    this.setState({ disabledOptions: this.getDisabledOptions(this.state.plainValues, value) })\n    return this.props.onChange(value, option)\n  }\n\n  onSearch (value) {\n    this.fetchOptions(`${this.state.url}?${qs.stringify({\n      cond: JSON.stringify({ value }, null, 0)\n    })}`)\n  }\n\n  render () {\n    const { options, disabledOptions, transformed, remoteSearch, multi } = this.state\n    const props = getProps(this.props, [\n      'placeholder',\n      'allowClear',\n      'disabled'\n    ])\n    Object.assign(props, transformed)\n    const children = []\n    for (const option of options) {\n      const { label, value, children: groupChildren } = option\n      const disabled = disabledOptions.indexOf(value) >= 0\n      if (Array.isArray(groupChildren)) {\n        const groupItems = []\n        for (const item of groupChildren) {\n          groupItems.push(\n            <SelectOption key={item.value} value={item.value} disabled={disabled}>{item.label}</SelectOption>\n          )\n        }\n        children.push(\n          <OptGroup key={label} label={label}>{groupItems}</OptGroup>\n        )\n      } else {\n        children.push(\n          <SelectOption key={value} value={value} disabled={disabled}>{label}</SelectOption>\n        )\n      }\n    }\n    if (multi === true) {\n      props.onChange = this.onChange\n    }\n    if (remoteSearch === true) {\n      props.onSearch = this.onSearch\n    }\n    return (\n      <Select {...props}>{children}</Select>\n    )\n  }\n}\n"]}