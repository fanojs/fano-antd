{"version":3,"sources":["../../../../src/FanoForm/types/custom/reftable.jsx"],"names":["FanoFormRefTable","props","field","injectProps","columns","map","item","width","key","dataIndex","_","merge","columnsExpand","state","visible","loading","rowKey","dataSource","list","onClick","bind","handleOk","handleCancel","fetchData","setState","query","qs","stringify","page","size","url","listUrl","lastIndexOf","headers","data","record","value","onChange","cursor","label","y","handleRowClick","current","pageSize","total","totalrecords","React","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport _ from 'lodash'\nimport qs from 'qs'\nimport { Input, Icon, Modal, Table } from 'antd'\nimport { getProps } from '../../../utils/form'\nimport { get } from '../../../utils/request'\n\nexport default class FanoFormRefTable extends React.Component {\n  constructor (props) {\n    super(props)\n    const { field } = this.props.injectProps\n    const columns = field.props.columns.map(item => {\n      item.width = item.width || 150\n      item.key = item.key || item.dataIndex\n      _.merge(item, field.props.columnsExpand[item.dataIndex])\n      return item\n    })\n    this.state = {\n      visible: false,\n      loading: false,\n      columns,\n      rowKey: field.props.rowKey || '_id',\n      dataSource: {\n        list: []\n      }\n    }\n    this.onClick = this.onClick.bind(this)\n    this.handleOk = this.handleOk.bind(this)\n    this.handleCancel = this.handleCancel.bind(this)\n  }\n\n  componentDidMount () {\n    this.fetchData()\n  }\n\n  onClick () {\n    this.setState({\n      visible: true\n    })\n  }\n\n  async fetchData () {\n    this.setState({ loading: true })\n    const { field } = this.props.injectProps\n    const query = qs.stringify({\n      page: this.state.dataSource.page,\n      size: this.state.dataSource.size\n    })\n\n    let url = field.props.listUrl\n    if (url.lastIndexOf('?') >= 0) {\n      url = `${url}&${query}`\n    } else {\n      url = `${url}?${query}`\n    }\n    const data = await get(`${url}`, {\n      headers: field.props.headers\n    })\n    const state = { loading: false }\n    if (data) {\n      state.dataSource = data\n    }\n    this.setState(state)\n  }\n\n  handleOk () {\n    this.setState({\n      visible: false\n    })\n  }\n\n  handleCancel () {\n    this.setState({\n      visible: false\n    })\n  }\n\n  handleRowClick (record) {\n    const value = record[this.state.rowKey]\n    this.setState({\n      visible: false\n    })\n    this.props.onChange(value)\n  }\n\n  render () {\n    const { field } = this.props.injectProps\n    const props = getProps(this.props, [\n      'placeholder',\n      'disabled'\n    ])\n    return (\n      <div>\n        <Input\n          {...props}\n          addonAfter={<Icon type={'search'} onClick={this.onClick} style={{ cursor: 'pointer' }} />}\n          readOnly\n        />\n        <Modal\n          width={600}\n          title={field.label}\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n        >\n          <Table\n            rowKey={this.state.rowKey}\n            columns={this.state.columns}\n            dataSource={this.state.dataSource.list}\n            scroll={{ y: 240 }}\n            loading={this.state.loading}\n            onRow={record => {\n              return {\n                onClick: this.handleRowClick.bind(this, record)\n              }\n            }}\n            pagination={{\n              current: this.state.dataSource.page,\n              pageSize: this.state.dataSource.size,\n              total: this.state.dataSource.totalrecords,\n              onChange: (page, size) => {\n                const { dataSource } = this.state\n                dataSource.page = page\n                dataSource.size = size\n                this.setState({ dataSource }, this.fetchData)\n              }\n            }}\n            size={'small'}\n          />\n        </Modal>\n      </div>\n    )\n  }\n}\n"],"file":"reftable.js"}