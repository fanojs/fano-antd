{"version":3,"sources":["../../src/FanoForm/DynamicForm.jsx"],"names":["FormItem","Item","DynamicForm","props","state","fieldsError","handleSubmit","bind","required","rule","_","isString","message","setFieldsValue","values","field","FanoFormType","c","types","type","getFieldsValue","Error","name","needMark","text","styles","formItemText","label","mark","requiredMark","colonGetter","formItemColon","unshift","isEmpty","colon","push","columns","isNumber","isFinite","xs","sm","md","lg","xl","isPlainObject","form","fieldNames","Array","isArray","console","warn","config","fields","chain","filter","includes","f","groupBy","mapValues","head","v","value","errors","setState","colProps","getColProps","getFieldDecorator","cols","i","length","style","fieldColProps","merge","width","height","placeholder","fieldError","pick","fieldLabel","getFieldLabel","fieldControl","getFieldControl","formItemProps","formItemLabel","formItemOptions","rules","initialValue","defaultValue","getRequiredRule","formItem","formItemCtrl","e","validateFieldsAndScroll","err","log","footer","renderFields","undefined","getDefaultFooter","React","Component","create"],"mappings":"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","file":"DynamicForm.js","sourcesContent":["import React from 'react'\nimport _ from 'lodash'\nimport { Form, Row, Col, Button } from 'antd'\nimport styles from './DynamicForm.less'\n\nconst FormItem = Form.Item\n\nclass DynamicForm extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      fieldsError: {}\n    }\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  getRequiredRule (required) {\n    const rule = { required: true }\n    if (_.isString(required)) {\n      rule.message = required\n    }\n    return rule\n  }\n\n  componentDidMount () {\n    this.setFieldsValue(this.props.values)\n  }\n\n  getFieldControl (field) {\n    const FanoFormType = this.props.c.types[field.type]\n    if (FanoFormType) {\n      return <FanoFormType injectProps={{ field, c: this.props.c, getFieldsValue: this.getFieldsValue }} />\n    }\n    throw new Error(`Invalid type: \"${field.name} => ${field.type}\"`)\n  }\n\n  getFieldLabel (field, needMark) {\n    const text = <span key={'label'} className={`${styles.formItemText} fano-form-item-label-text`}>{field.label}</span>\n    const mark = <span key={'requiredMark'} className={`${styles.requiredMark} fano-form-item-required-mark`}>*</span>\n    const colonGetter = (mark = ':') => <span key={'colon'} className={`${styles.formItemColon} fano-form-item-colon`}>{mark}</span>\n\n    const label = [text]\n    if (field.props.required ||\n      (field.props.requiredMark === true || needMark === true)) {\n      label.unshift(mark)\n    }\n    if (_.isEmpty(field.props.colon) || field.props.colon === true) {\n      label.push(colonGetter())\n    } else {\n      label.push(colonGetter(null))\n    }\n    return label\n  }\n\n  getColProps (columns) {\n    if (!_.isNumber(columns) || !_.isFinite(columns)) {\n      columns = 4\n    }\n    switch (columns) {\n      case 4:\n        return { xs: 24, sm: 12, md: 12, lg: 8, xl: 6 }\n      case 3:\n        return { xs: 24, sm: 12, md: 12, lg: 8 }\n      case 2:\n        return { xs: 24, sm: 12 }\n      case 1:\n        return { xs: 24 }\n      default:\n        return { xs: 24, sm: 12, md: 12, lg: 8, xl: 6 }\n    }\n  }\n\n  setFieldsValue (values) {\n    if (_.isPlainObject(values)) {\n      return !!this.props.form.setFieldsValue(values)\n    }\n    return false\n  }\n\n  getFieldsValue (fieldNames) {\n    return this.props.form.getFieldsValue(fieldNames)\n  }\n\n  getFieldsProps (fieldNames = []) {\n    if (!Array.isArray(fieldNames)) {\n      console.warn('argument must be a array')\n      return {}\n    }\n    const { config } = this.props\n    const fields = _.chain(config.fields)\n      .filter(f => _.isEmpty(fieldNames) || fieldNames.includes(f.name))\n      .groupBy('name')\n      .mapValues(v => _.head(v))\n      .value()\n    return fields\n  }\n\n  /**\n   * 设置字段错误信息\n   * requiredMark:boolean - 是否显示必填\n   * validateStatus:string - 校验状态，可选 'success', 'warning', 'error', 'validating'\n   * hasFeedback:boolean - 用于给输入框添加反馈图标\n   * help:string - 设置校验文案\n   */\n  setFieldsError (errors) {\n    if (_.isPlainObject(errors)) {\n      const { fieldsError } = this.state\n      Object.assign(fieldsError, errors)\n      this.setState({ fieldsError })\n      return true\n    }\n    return false\n  }\n\n  renderFields () {\n    const { config, form } = this.props\n    const { fieldsError } = this.state\n    const { fields, columns = 4 } = config\n    const colProps = this.getColProps(columns)\n    const { getFieldDecorator } = form\n    const cols = []\n    for (let i = 0; i < fields.length; i++) {\n      const field = fields[i]\n      const style = {}\n      let fieldColProps = colProps\n      if (field.props.colProps) {\n        fieldColProps = field.props.colProps\n      } else if (_.isFinite(field.props.columns)) {\n        fieldColProps = this.getColProps(field.props.columns)\n      }\n      if (field.props.style) {\n        _.merge(style, field.props.style)\n      }\n      if (field.props.width) {\n        style.width = field.props.width\n      }\n      if (field.props.height) {\n        style.height = field.props.height\n      }\n      field.props.placeholder = field.props.placeholder || field.label\n\n      const fieldError = _.pick(fieldsError[field.name], ['requiredMark', 'validateStatus', 'hasFeedback', 'help'])\n      const fieldLabel = this.getFieldLabel(field, fieldError.requiredMark)\n      const fieldControl = this.getFieldControl(field)\n      const formItemProps = {\n        label: <span className={`${styles.formItemLabel} fano-form-item-label fano-form-item-label-${field.name}`}>{fieldLabel}</span>,\n        colon: false\n      }\n      const formItemOptions = {\n        rules: [],\n        initialValue: field.props.defaultValue\n      }\n      if (field.props.required) {\n        formItemOptions.rules.push(this.getRequiredRule(field.props.required))\n      }\n      Object.assign(formItemProps, fieldError)\n      cols.push(\n        <Col key={i} {...fieldColProps} className={`fano-form-col fano-form-col-${field.name}`}>\n          <FormItem {...formItemProps} className={`${styles.formItem} fano-form-item fano-form-item-${field.name}`}>\n            <div className={`${styles.formItemCtrl} fano-form-ctrl fano-form-ctrl-${field.name}`} style={style}>\n              {getFieldDecorator(field.name, formItemOptions)(fieldControl)}\n            </div>\n          </FormItem>\n        </Col>\n      )\n    }\n    return cols\n  }\n\n  handleSubmit (e) {\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values)\n      }\n    })\n  }\n\n  getDefaultFooter () {\n    return (\n      <div className={styles.footer}>\n        <Button>取消</Button>\n        <Button type={'primary'} onClick={this.handleSubmit}>确定</Button>\n      </div>\n    )\n  }\n\n  render () {\n    return (\n      <Form layout={'inline'}>\n        <Row>{this.renderFields()}</Row>\n        <Row>\n          <Col>\n            {this.props.footer === undefined ? this.getDefaultFooter() : this.props.footer}\n          </Col>\n        </Row>\n      </Form>\n    )\n  }\n}\n\nexport default Form.create()(DynamicForm)\n"]}