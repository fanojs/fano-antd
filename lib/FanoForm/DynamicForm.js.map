{"version":3,"sources":["../../src/FanoForm/DynamicForm.jsx"],"names":["FormItem","Item","DynamicForm","props","state","fieldsError","handleSubmit","bind","required","rule","_","isString","message","setFieldsValue","values","field","FanoFormType","c","types","type","getFieldsValue","Error","name","needMark","text","label","mark","colonGetter","requiredMark","unshift","isEmpty","colon","push","columns","isNumber","isFinite","xs","sm","md","lg","xl","isPlainObject","form","fieldNames","Array","isArray","console","warn","config","fields","chain","filter","f","includes","groupBy","mapValues","v","head","value","errors","Object","assign","setState","colProps","getColProps","getFieldDecorator","cols","i","length","style","fieldColProps","merge","width","height","placeholder","fieldError","pick","fieldLabel","getFieldLabel","fieldControl","getFieldControl","formItemProps","formItemOptions","rules","initialValue","defaultValue","getRequiredRule","e","validateFieldsAndScroll","err","log","renderFields","footer","undefined","getDefaultFooter","React","Component","create"],"mappings":"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","sourcesContent":["import React from 'react'\nimport _ from 'lodash'\nimport { Form, Row, Col, Button } from 'antd'\n\nconst FormItem = Form.Item\n\nclass DynamicForm extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      fieldsError: {}\n    }\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  getRequiredRule (required) {\n    const rule = { required: true }\n    if (_.isString(required)) {\n      rule.message = required\n    }\n    return rule\n  }\n\n  componentDidMount () {\n    this.setFieldsValue(this.props.values)\n  }\n\n  getFieldControl (field) {\n    const FanoFormType = this.props.c.types[field.type]\n    if (FanoFormType) {\n      return <FanoFormType injectProps={{ field, c: this.props.c, getFieldsValue: this.getFieldsValue }} />\n    }\n    throw new Error(`Invalid type: \"${field.name} => ${field.type}\"`)\n  }\n\n  getFieldLabel (field, needMark) {\n    const text = <span key={'label'} className={`fano-form-item-text fano-form-item-label-text`}>{field.label}</span>\n    const mark = <span key={'requiredMark'} className={`fano-form-item-required-mark`}>*</span>\n    const colonGetter = (mark = ':') => <span key={'colon'} className={`fano-form-item-colon fano-form-item-colon`}>{mark}</span>\n\n    const label = [text]\n    if (field.props.required ||\n      (field.props.requiredMark === true || needMark === true)) {\n      label.unshift(mark)\n    }\n    if (_.isEmpty(field.props.colon) || field.props.colon === true) {\n      label.push(colonGetter())\n    } else {\n      label.push(colonGetter(null))\n    }\n    return label\n  }\n\n  getColProps (columns) {\n    if (!_.isNumber(columns) || !_.isFinite(columns)) {\n      columns = 4\n    }\n    switch (columns) {\n      case 4:\n        return { xs: 24, sm: 12, md: 12, lg: 8, xl: 6 }\n      case 3:\n        return { xs: 24, sm: 12, md: 12, lg: 8 }\n      case 2:\n        return { xs: 24, sm: 12 }\n      case 1:\n        return { xs: 24 }\n      default:\n        return { xs: 24, sm: 12, md: 12, lg: 8, xl: 6 }\n    }\n  }\n\n  setFieldsValue (values) {\n    if (_.isPlainObject(values)) {\n      return !!this.props.form.setFieldsValue(values)\n    }\n    return false\n  }\n\n  getFieldsValue (fieldNames) {\n    return this.props.form.getFieldsValue(fieldNames)\n  }\n\n  getFieldsProps (fieldNames = []) {\n    if (!Array.isArray(fieldNames)) {\n      console.warn('argument must be a array')\n      return {}\n    }\n    const { config } = this.props\n    const fields = _.chain(config.fields)\n      .filter(f => _.isEmpty(fieldNames) || fieldNames.includes(f.name))\n      .groupBy('name')\n      .mapValues(v => _.head(v))\n      .value()\n    return fields\n  }\n\n  /**\n   * 设置字段错误信息\n   * requiredMark:boolean - 是否显示必填\n   * validateStatus:string - 校验状态，可选 'success', 'warning', 'error', 'validating'\n   * hasFeedback:boolean - 用于给输入框添加反馈图标\n   * help:string - 设置校验文案\n   */\n  setFieldsError (errors) {\n    if (_.isPlainObject(errors)) {\n      const { fieldsError } = this.state\n      Object.assign(fieldsError, errors)\n      this.setState({ fieldsError })\n      return true\n    }\n    return false\n  }\n\n  renderFields () {\n    const { config, form } = this.props\n    const { fieldsError } = this.state\n    const { fields, columns = 4 } = config\n    const colProps = this.getColProps(columns)\n    const { getFieldDecorator } = form\n    const cols = []\n    for (let i = 0; i < fields.length; i++) {\n      const field = fields[i]\n      const style = {}\n      let fieldColProps = colProps\n      if (field.props.colProps) {\n        fieldColProps = field.props.colProps\n      } else if (_.isFinite(field.props.columns)) {\n        fieldColProps = this.getColProps(field.props.columns)\n      }\n      if (field.props.style) {\n        _.merge(style, field.props.style)\n      }\n      if (field.props.width) {\n        style.width = field.props.width\n      }\n      if (field.props.height) {\n        style.height = field.props.height\n      }\n      field.props.placeholder = field.props.placeholder || field.label\n\n      const fieldError = _.pick(fieldsError[field.name], ['requiredMark', 'validateStatus', 'hasFeedback', 'help'])\n      const fieldLabel = this.getFieldLabel(field, fieldError.requiredMark)\n      const fieldControl = this.getFieldControl(field)\n      const formItemProps = {\n        label: <span className={`fano-form-item-label fano-form-item-label fano-form-item-label-${field.name}`}>{fieldLabel}</span>,\n        colon: false\n      }\n      const formItemOptions = {\n        rules: [],\n        initialValue: field.props.defaultValue\n      }\n      if (field.props.required) {\n        formItemOptions.rules.push(this.getRequiredRule(field.props.required))\n      }\n      Object.assign(formItemProps, fieldError)\n      cols.push(\n        <Col key={i} {...fieldColProps} className={`fano-form-col fano-form-col-${field.name}`}>\n          <FormItem {...formItemProps} className={`fano-form-item fano-form-item-${field.name}`}>\n            <div className={`fano-form-item-ctrl fano-form-ctrl fano-form-ctrl-${field.name}`} style={style}>\n              {getFieldDecorator(field.name, formItemOptions)(fieldControl)}\n            </div>\n          </FormItem>\n        </Col>\n      )\n    }\n    return cols\n  }\n\n  handleSubmit (e) {\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values)\n      }\n    })\n  }\n\n  getDefaultFooter () {\n    return (\n      <div className={'fano-form-footer'}>\n        <Button>取消</Button>\n        <Button type={'primary'} onClick={this.handleSubmit}>确定</Button>\n      </div>\n    )\n  }\n\n  render () {\n    return (\n      <Form layout={'inline'}>\n        <Row>{this.renderFields()}</Row>\n        <Row>\n          <Col>\n            {this.props.footer === undefined ? this.getDefaultFooter() : this.props.footer}\n          </Col>\n        </Row>\n      </Form>\n    )\n  }\n}\n\nexport default Form.create()(DynamicForm)\n"],"file":"DynamicForm.js"}